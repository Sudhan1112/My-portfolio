import React, { useState } from "react";
import Modal from "../ui/Modal";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faLink, faTimes, faExternalLink } from "@fortawesome/free-solid-svg-icons";
import {
	faReact,
	faNodeJs,
	faJs,
	faHtml5,
	faCss3Alt
} from "@fortawesome/free-brands-svg-icons";

import "./styles/project.css";

// Tech Stack Icon Mapping
const techIconMap = {
	react: { icon: faReact, color: "#61DAFB" },
	nodejs: { icon: faNodeJs, color: "#339933" },
	javascript: { icon: faJs, color: "#F7DF1E" },
	html5: { icon: faHtml5, color: "#E34F26" },
	css3: { icon: faCss3Alt, color: "#1572B6" },
	mongodb: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#47A248" width="20" height="20">
				<path d="M17.193 9.555c-1.264-5.58-4.252-7.414-4.573-8.115-.28-.394-.53-.954-.735-1.44-.036.495-.055.685-.523 1.184-.723.566-4.438 3.682-4.74 10.02-.282 5.912 4.27 9.435 4.888 9.884l.07.05A73.49 73.49 0 0111.91 24h.481c.114-1.032.284-2.056.51-3.07.417-.296.604-.463.85-.693a11.342 11.342 0 003.639-8.464c.01-.814-.103-1.662-.197-2.218zm-5.336 8.195s0-8.291.275-8.29c.213 0 .49 10.695.49 10.695-.381-.045-.765-1.76-.765-2.405z"/>
			</svg>
		),
		color: "#47A248"
	},
	express: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#000000" width="20" height="20">
				<path d="M24 18.588a1.529 1.529 0 01-1.895-.72l-3.45-4.771-.5-.667-4.003 5.444a1.466 1.466 0 01-1.802.708l5.158-6.92-4.798-6.251a1.595 1.595 0 011.9.666l3.576 4.83 3.596-4.81a1.435 1.435 0 011.788-.668L21.708 7.9l-2.522 3.283a.666.666 0 000 .994l4.804 6.412zM.002 11.576l.42-2.075c1.154-4.103 5.858-5.81 9.094-3.27 1.895 1.489 2.368 3.597 2.275 5.973H1.116C.943 16.447 4.005 19.009 7.92 17.7a4.078 4.078 0 002.582-2.876c.207-.666.548-.78 1.174-.588a5.417 5.417 0 01-2.589 3.957c-2.864 1.607-6.509.018-7.978-2.442a6.602 6.602 0 01-1.107-4.175zm8.457-2.242c-.715-1.34-3.225-1.340-3.94 0a1.25 1.25 0 00-.089.497H8.548c-.012-.165-.026-.33-.089-.497z"/>
			</svg>
		),
		color: "#000000"
	},
	tailwind: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#06B6D4" width="20" height="20">
				<path d="M12.001,4.8c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C13.666,10.618,15.027,12,18.001,12c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C16.337,6.182,14.976,4.8,12.001,4.8z M6.001,12c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C7.666,17.818,9.027,19.2,12.001,19.2c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C10.337,13.382,8.976,12,6.001,12z"/>
			</svg>
		),
		color: "#06B6D4"
	},
	redux: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#764ABC" width="20" height="20">
				<path d="M16.634 16.504c.87-.075 1.543-.84 1.5-1.754-.047-.914-.796-1.648-1.709-1.648h-.061c-.943.047-1.695.848-1.648 1.769.047.457.203.87.421 1.22-1.891 3.726-4.657 6.422-8.2 8.238-1.313.67-2.673.96-4.033.87-1.969-.135-3.6-1.219-4.5-2.994-.998-2.003-.57-4.005.96-6.422 1.219-1.891 2.909-3.294 4.2-4.005-.135-.39-.27-.87-.27-1.266 0-.457.07-.914.18-1.313-6.422 4.61-7.28 10.847-4.657 14.143 1.828 2.292 5.17 3.294 8.658 3.294.914 0 1.828-.09 2.742-.27 4.564-.81 8.564-3.294 10.724-6.422.914-1.313 1.313-2.673 1.313-4.005 0-1.219-.39-2.338-1.078-3.294zm-3.294-7.28c3.6-.27 6.422-3.294 6.422-6.422 0-3.6-2.673-6.422-6.422-6.422-3.6 0-6.422 2.673-6.422 6.422 0 .457.047.914.135 1.313l1.313-.27c-.09-.39-.135-.81-.135-1.219 0-2.673 2.203-4.876 4.876-4.876s4.876 2.203 4.876 4.876-2.203 4.876-4.876 4.876c-.914 0-1.828-.27-2.538-.81l-.914 1.078c.914.67 2.003 1.078 3.294 1.078z"/>
			</svg>
		),
		color: "#764ABC"
	},
	jwt: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#000000" width="20" height="20">
				<path d="M10.2 0L9.6 3.6 8.4 3.3 7.8 6.9 6.6 6.6 6 10.2 4.8 9.9 4.2 13.5 3 13.2 2.4 16.8 1.2 16.5 0.6 20.1 0 19.8 0.6 23.4 1.8 23.7 2.4 20.1 3.6 20.4 4.2 16.8 5.4 17.1 6 13.5 7.2 13.8 7.8 10.2 9 10.5 9.6 6.9 10.8 7.2 11.4 3.6 12.6 3.9 13.2 0.3 14.4 0.6 15 4.2 16.2 3.9 16.8 7.5 18 7.2 18.6 10.8 19.8 10.5 20.4 14.1 21.6 13.8 22.2 17.4 23.4 17.1 24 20.7 22.8 21 22.2 17.4 21 17.7 20.4 14.1 19.2 14.4 18.6 10.8 17.4 11.1 16.8 7.5 15.6 7.8 15 4.2 13.8 4.5 13.2 0.9 12 1.2 11.4 4.8 10.2 4.5z"/>
			</svg>
		),
		color: "#000000"
	},
	cpp: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#00599C" width="20" height="20">
				<path d="M22.394 6c-.167-.29-.398-.543-.652-.69L12.926.22c-.509-.294-1.34-.294-1.848 0L2.26 5.31c-.508.293-.923 1.013-.923 1.6v10.18c0 .294.104.62.271.91.167.29.398.543.652.69l8.816 5.09c.508.293 1.34.293 1.848 0l8.816-5.09c.254-.147.485-.4.652-.69.167-.29.27-.616.27-.91V6.91c.003-.294-.1-.62-.268-.91zM12 19.109c-3.92 0-7.109-3.189-7.109-7.109S8.08 4.891 12 4.891a7.133 7.133 0 016.156 3.552l-3.076 1.781A3.567 3.567 0 0012 8.445c-1.96 0-3.554 1.595-3.554 3.555S10.04 15.555 12 15.555a3.57 3.57 0 003.08-1.778l3.077 1.78A7.135 7.135 0 0112 19.109zm7.109-6.714h-.79v.79h-.79v-.79h-.79v-.79h.79v-.79h.79v.79h.79v.79zm2.962 0h-.79v.79h-.79v-.79h-.79v-.79h.79v-.79h.79v.79h.79v.79z"/>
			</svg>
		),
		color: "#00599C"
	},
	fastapi: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#009688" width="20" height="20">
				<path d="M12 0C5.375 0 0 5.375 0 12s5.375 12 12 12 12-5.375 12-12S18.625 0 12 0zm-.624 21.62v-7.528H7.19l-.003-.006L12 3.38l4.813 10.706-.003.006h-4.186v7.528h-.248z"/>
			</svg>
		),
		color: "#009688"
	},
	python: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#3776AB" width="20" height="20">
				<path d="M14.25.18l.9.2.73.26.59.3.45.32.34.34.25.34.16.33.1.3.04.26.02.2-.01.13V8.5l-.05.63-.13.55-.21.46-.26.38-.3.31-.33.25-.35.19-.35.14-.33.1-.3.07-.26.04-.21.02H8.77l-.69.05-.59.14-.5.22-.41.27-.33.32-.27.35-.2.36-.15.37-.1.35-.07.32-.04.27-.02.21v3.06H3.17l-.21-.03-.28-.07-.32-.12-.35-.18-.36-.26-.36-.36-.35-.46-.32-.59-.28-.73-.21-.88-.14-1.05-.05-1.23.06-1.22.16-1.04.24-.87.32-.71.36-.57.4-.44.42-.33.42-.24.4-.16.36-.1.32-.05.26-.02.21-.01h5.84l.69-.05.59-.14.5-.21.41-.28.33-.32.27-.35.2-.36.15-.36.1-.35.07-.32.04-.28.02-.21V6.07h2.09l.14.01zm-6.47 14.25c-.2 0-.37.09-.5.27-.13.18-.2.39-.2.61 0 .22.07.43.2.61.13.18.3.27.5.27.2 0 .37-.09.5-.27.13-.18.2-.39.2-.61 0-.22-.07-.43-.2-.61-.13-.18-.3-.27-.5-.27zm7.5-13.5c.2 0 .37-.09.5-.27.13-.18.2-.39.2-.61 0-.22-.07-.43-.2-.61-.13-.18-.3-.27-.5-.27-.2 0-.37.09-.5.27-.13.18-.2.39-.2.61 0 .22.07.43.2.61.13.18.3.27.5.27z"/>
			</svg>
		),
		color: "#3776AB"
	},
	firebase: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#FFCA28" width="20" height="20">
				<path d="M5.803 21.066l2.756-4.756L12.678.934c.179-.302.625-.302.804 0L18.197 16.31l2.756 4.756c.268.463-.067 1.044-.596 1.044H6.399c-.529 0-.864-.581-.596-1.044z"/>
				<path d="M5.803 21.066l2.756-4.756L12.678.934c.179-.302.625-.302.804 0L18.197 16.31l2.756 4.756c.268.463-.067 1.044-.596 1.044H6.399c-.529 0-.864-.581-.596-1.044z" fill="#FFA000"/>
				<path d="M15.025 11.065L8.559 16.31l3.559-6.135c.179-.31.625-.31.804 0l2.103 3.635z" fill="#FF6F00"/>
			</svg>
		),
		color: "#FFCA28"
	},
	docker: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#2496ED" width="20" height="20">
				<path d="M13.983 11.078h2.119a.186.186 0 00.186-.185V9.006a.186.186 0 00-.186-.186h-2.119a.185.185 0 00-.185.185v1.888c0 .102.083.185.185.185m-2.954-5.43h2.118a.186.186 0 00.186-.186V3.574a.186.186 0 00-.186-.185h-2.118a.185.185 0 00-.185.185v1.888c0 .102.082.185.185.186m0 2.716h2.118a.187.187 0 00.186-.186V6.29a.186.186 0 00-.186-.185h-2.118a.185.185 0 00-.185.185v1.887c0 .102.082.185.185.186m-2.93 0h2.12a.186.186 0 00.184-.186V6.29a.185.185 0 00-.185-.185H8.1a.185.185 0 00-.185.185v1.887c0 .102.083.185.185.186m-2.964 0h2.119a.186.186 0 00.185-.186V6.29a.185.185 0 00-.185-.185H5.136a.186.186 0 00-.186.185v1.887c0 .102.084.185.186.186m5.893 2.715h2.118a.186.186 0 00.186-.185V9.006a.186.186 0 00-.186-.186h-2.118a.185.185 0 00-.185.185v1.888c0 .102.082.185.185.185m-2.93 0h2.12a.185.185 0 00.184-.185V9.006a.185.185 0 00-.184-.186h-2.12a.185.185 0 00-.184.185v1.888c0 .102.083.185.185.185m-2.964 0h2.119a.185.185 0 00.185-.185V9.006a.185.185 0 00-.184-.186h-2.12a.186.186 0 00-.186.186v1.887c0 .102.084.185.186.185m-2.92 0h2.12a.185.185 0 00.184-.185V9.006a.185.185 0 00-.184-.186h-2.12a.185.185 0 00-.184.185v1.888c0 .102.082.185.185.185M23.763 9.89c-.065-.051-.672-.51-1.954-.51-.338 0-.676.033-1.01.099-.663-1.865-2.608-2.526-2.663-2.526l-.343-.133-.226.327c-.284.438-.49.922-.612 1.43-.23.97-.09 1.882.403 2.661-.595.332-1.55.413-1.744.42H.751a.751.751 0 00-.75.748 11.376 11.376 0 00.692 4.062c.545 1.428 1.355 2.48 2.41 3.124 1.18.723 3.1 1.137 5.275 1.137.983 0 1.944-.105 2.854-.316a12.248 12.248 0 003.57-1.299 10.731 10.731 0 002.699-2.086A11.05 11.05 0 0018.895 12.83c.966.001 1.626-.245 2.05-.735.256-.29.407-.613.478-.957l.056-.287-.226-.185"/>
			</svg>
		),
		color: "#2496ED"
	},
	// Custom SVG icons for technologies not available in FontAwesome
	mongodb: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#47A248" width="20" height="20">
				<path d="M17.193 9.555c-1.264-5.58-4.252-7.414-4.573-8.115-.28-.394-.53-.954-.735-1.44-.036.495-.055.685-.523 1.184-.723.566-4.438 3.682-4.74 10.02-.282 5.912 4.27 9.435 4.888 9.884l.07.05A73.49 73.49 0 0111.91 24h.481c.114-1.032.284-2.056.51-3.07.417-.296 5.352-3.618 4.292-11.375z"/>
			</svg>
		),
		color: "#47A248"
	},
	express: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#000000" width="20" height="20">
				<path d="M24 18.588a1.529 1.529 0 01-1.895-.72l-3.45-4.771-.5-.667-4.003 5.444a1.466 1.466 0 01-1.802.708l5.158-6.92-4.798-6.251a1.595 1.595 0 011.9-.666L18.281 10.5l3.231-4.615a1.588 1.588 0 011.882-.712l-4.935 6.86 5.541 7.555z"/>
			</svg>
		),
		color: "#000000"
	},
	redux: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#764ABC" width="20" height="20">
				<path d="M16.634 16.504c.87-.075 1.543-.84 1.5-1.754-.047-.914-.796-1.648-1.709-1.648h-.061c-.943.047-1.695.848-1.648 1.769.047.457.203.87.42 1.22-1.891 3.726-4.657 6.422-8.286 8.286-1.596.817-3.194 1.031-4.792.639-1.128-.274-2.006-1.031-2.457-2.085-.764-1.785-.3-4.009 1.09-6.058.426-.639.956-1.22 1.543-1.754-.046-.184-.092-.457-.138-.731-.014-.047-.03-.092-.046-.138-4.23 4.668-2.457 8.612-1.09 10.208 1.031 1.22 2.992 1.978 5.13 1.978.639 0 1.292-.077 1.931-.23 4.668-1.22 8.286-4.668 10.208-8.286zm2.457-4.668c-2.085-2.457-5.13-3.795-8.612-3.795h-.457c-.184-.412-.596-.686-1.09-.686h-.061c-.943.047-1.695.848-1.648 1.769.047.914.796 1.648 1.709 1.648h.061c.502-.047.956-.367 1.184-.824h.518c2.457 0 4.668.916 6.422 2.671 1.543 1.543 2.13 3.795 1.648 5.977-.351 1.543-1.317 2.671-2.671 3.226-.824.334-2.13.381-2.671.045-.412-.23-.824-.641-1.09-1.09-.184.137-.502.367-.777.549.641.824 1.361 1.317 2.13 1.543.32.092.641.137.961.137 1.361 0 2.671-.549 3.726-1.543 1.543-1.361 2.13-3.226 1.648-5.13-.457-1.892-1.892-3.726-3.795-4.668z"/>
			</svg>
		),
		color: "#764ABC"
	},
	tailwind: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#06B6D4" width="20" height="20">
				<path d="M12.001,4.8c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C13.666,10.618,15.027,12,18.001,12c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C16.337,6.182,14.976,4.8,12.001,4.8z M6.001,12c-3.2,0-5.2,1.6-6,4.8c1.2-1.6,2.6-2.2,4.2-1.8c0.913,0.228,1.565,0.89,2.288,1.624 C7.666,17.818,9.027,19.2,12.001,19.2c3.2,0,5.2-1.6,6-4.8c-1.2,1.6-2.6,2.2-4.2,1.8c-0.913-0.228-1.565-0.89-2.288-1.624 C10.337,13.382,8.976,12,6.001,12z"/>
			</svg>
		),
		color: "#06B6D4"
	},
	file: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#FF6B6B" width="20" height="20">
				<path d="M14,2H6A2,2 0 0,0 4,4V20A2,2 0 0,0 6,22H18A2,2 0 0,0 20,20V8L14,2M18,20H6V4H13V9H18V20Z"/>
			</svg>
		),
		color: "#FF6B6B"
	},
	database: {
		svg: (
			<svg viewBox="0 0 24 24" fill="#4ECDC4" width="20" height="20">
				<path d="M12,3C7.58,3 4,4.79 4,7C4,9.21 7.58,11 12,11C16.42,11 20,9.21 20,7C20,4.79 16.42,3 12,3M4,9V12C4,14.21 7.58,16 12,16C16.42,16 20,14.21 20,12V9C20,11.21 16.42,13 12,13C7.58,13 4,11.21 4,9M4,14V17C4,19.21 7.58,21 12,21C16.42,21 20,19.21 20,17V14C20,16.21 16.42,18 12,18C7.58,18 4,16.21 4,14Z"/>
			</svg>
		),
		color: "#4ECDC4"
	}
};

const TechIcon = ({ tech }) => {
	const techInfo = techIconMap[tech.icon];
	if (!techInfo) return null;

	if (techInfo.svg) {
		return (
			<div className="tech-icon" style={{ color: techInfo.color }} title={tech.name}>
				{techInfo.svg}
			</div>
		);
	}

	return (
		<div className="tech-icon" style={{ color: techInfo.color }} title={tech.name}>
			<FontAwesomeIcon icon={techInfo.icon} />
		</div>
	);
};

const Project = (props) => {
	const { logo, title, description, linkText, link, techStack, problemSolved, features } = props;
	const [showModal, setShowModal] = useState(false);

	const handleCardClick = (e) => {
		e.preventDefault();
		setShowModal(true);
	};

	const handleModalClose = () => {
		setShowModal(false);
	};

	const handleExternalLink = (e) => {
		e.stopPropagation();
		window.open(link, '_blank');
	};



	return (
		<React.Fragment>
			<div className="project" onClick={handleCardClick}>
				<div className="project-container">
					{logo && (
						<div className="project-logo">
							<img src={logo} alt="logo" />
						</div>
					)}
					<div className="project-title">{title}</div>
					<div className="project-description">{description}</div>

					{/* Tech Stack Icons */}
					{techStack && techStack.length > 0 && (
						<div className="project-tech-stack">
							{techStack.slice(0, 4).map((tech, index) => (
								<TechIcon key={index} tech={tech} />
							))}
							{techStack.length > 4 && (
								<div className="tech-more">+{techStack.length - 4}</div>
							)}
						</div>
					)}

					<div className="project-link">
						<div className="project-link-icon">
							<FontAwesomeIcon icon={faLink} />
						</div>
						<div className="project-link-text">{linkText}</div>
					</div>
				</div>
			</div>

			{/* Detailed Modal */}
			<Modal open={showModal} onClose={handleModalClose}>
					<div className="project-modal-header">
							{logo && (
								<div className="project-modal-logo">
									<img src={logo} alt="logo" />
								</div>
							)}
							<div className="project-modal-title-section">
								<h2 className="project-modal-title">{title}</h2>
								<button className="project-modal-close" onClick={handleModalClose}>
									<FontAwesomeIcon icon={faTimes} />
								</button>
							</div>
						</div>

						<div className="project-modal-content">
							<div className="project-modal-description">
								<p>{description}</p>
							</div>

							{/* Tech Stack Section */}
							{techStack && techStack.length > 0 && (
								<div className="project-modal-section">
									<h3>Technologies Used</h3>
									<div className="project-modal-tech-grid">
										{techStack.map((tech, index) => (
											<div key={index} className="project-modal-tech-item">
												<TechIcon tech={tech} />
												<span>{tech.name}</span>
											</div>
										))}
									</div>
								</div>
							)}

							{/* Problem Solved Section */}
							{problemSolved && (
								<div className="project-modal-section">
									<h3>Problem Solved</h3>
									<p>{problemSolved}</p>
								</div>
							)}

							{/* Features Section */}
							{features && features.length > 0 && (
								<div className="project-modal-section">
									<h3>Key Features</h3>
									<ul className="project-modal-features">
										{features.map((feature, index) => (
											<li key={index}>{feature}</li>
										))}
									</ul>
								</div>
							)}

							<div className="project-modal-actions">
								<button className="project-modal-link-btn" onClick={handleExternalLink}>
									<FontAwesomeIcon icon={faExternalLink} />
									<span>View Project</span>
								</button>
							</div>
						</div>
			</Modal>
		</React.Fragment>
	);
};

export default Project;
